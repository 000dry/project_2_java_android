{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww13260\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\b\fs24 \cf0 To do list:\
\
	Monday\
\
	track score: 
\b0 give person an int property to increment/decrement as game progresses. 
\b X
\b0 \
	
\b card images:
\b0  image view for each of four suits, overlay with text of rank. Could use hash map 		for suit/image key/values. 
\b X
\b0 \
	
\b opt out: 
\b0 boolean property on player to show if they\'92re in the game again - check this before 		proceeding with scoring/declaring result 
\b X\
\
	Tuesday\
\
	enum > hasmap: 
\b0 map enums to hashes, pairing each with a string value 
\b X
\b0 \
	
\b Dealer/Game class: 
\b0 create game class to handle certain components of the game - Dealer is handling too much 
\b X
\b0 \
	
\b general refactoring: 
\b0 GameActivity in particular could do with some stuff being condensed down into additional 		methods \
	\
	
\b Wednesday\
	\
	Ace high/low:
\b0  set ace Enum value to 11 (?). In result method, if hand is above 21, loop through hand to check for 	aces. If found, minus 10 from hand value.\
	
\b Limit deal on hand value: 
\b0 perhaps create hand value property in person class so that deal function can no longer be 	called once value reaches 21 or over.\
	
\b Refactor: 
\b0 OnePLayerActivity\
\
	
\b Blackjack rules:\
\
	- 
\b0 Dealer can deal themselves bust\
	- ace can be high or low\
}